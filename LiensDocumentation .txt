 ///////////ici la méthode jaro implementée que j'arrive pas trop a comprendre le code, le concept est simple une moyenne de 0 à 1 : 


https://github.com/nap/jaro-winkler-distance


///////explications sur la méthode jaro :

https://pypi.python.org/pypi/jaro_winkler/1.0.2

https://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance


https://www.developpez.net/forums/d1611970/autres-langages/python-zope/general-python/distance-jaro-winkler-entre-textes/



-////////// ici le code de la méthode jaro dans différents langage : 


https://rosettacode.org/wiki/Jaro_distance


- https://pypi.python.org/pypi/pyjarowinkler


- /////////////ici la méthode jaccard : 

https://stackoverflow.com/questions/11911252/python-jaccard-distance-using-word-intersection-but-not-character-intersection



-///////////// liens sur les sequences matcher ( une autre méthode pour comparer deux chaine de carctere: 


https://docs.python.org/2/library/difflib.html


https://docs.python.org/2.4/lib/sequencematcher-examples.html



https://stackoverflow.com/questions/6690739/fuzzy-string-comparison-in-python-confused-with-which-library-to-use



- ////////////un lien qui explique et commente le code levenshtein :


https://fr.wikipedia.org/wiki/Distance_de_Levenshtein



- ///////////////une interface pour appliquer la methode leven :


http://jeux-et-mathematiques.davalan.org/lang/algo/lev/index.html


- /////////////////la ça explique comment utiliser la librairie ou fonction ' Distance' qui est deja définie 

https://pypi.python.org/pypi/Distance/


-///////////////// ici la méthode leven


https://secweb.cs.odu.edu/~zeil/cs361/web/website/Lectures/styles/pages/editdistance.html




- ///////////////////ce site ,lien il explique très bien et avec les commentaire qu'il faut :


https://www.python-course.eu/levenshtein_distance.php

-/////////////  Les stop-words

https://www.geeksforgeeks.org/removing-stop-words-nltk-python/
